# Create a new release branched from develop
name: Create Release Branch
on: workflow_dispatch

jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: develop

      - name: Get latest release tag
        id: get-latest-release-tag
        run: echo "LATEST_RELEASE_TAG=$(git tag -l "20*" | sort -V | tail -n 1)" >> $GITHUB_OUTPUT

      - name: Initialize branch name
        id: initialize-branch-name
        run: echo "BRANCH_NAME=release/$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Get latest release branch
        id: get-latest-release-branch
        env:
          BRANCH_NAME: ${{ steps.initialize-branch-name.outputs.BRANCH_NAME }}
        run: echo "LATEST_RELEASE_BRANCHES=$(git branch -r | grep "origin/${BRANCH_NAME}" | sort -n | tail -n 1)" >> "$GITHUB_OUTPUT"

      - name: Generate branch name
        id: generate-branch-name
        env:
          BRANCH_NAME: ${{ steps.initialize-branch-name.outputs.BRANCH_NAME }}
          LATEST_RELEASE_BRANCH: ${{ steps.get-latest-release-branch.outputs.LATEST_RELEASE_BRANCH }}
        run: |
          if [[ -n $LATEST_RELEASE_BRANCH ]]; then
            REV="$(echo $LATEST_RELEASE_BRANCH | sed -E 's/origin\/release\/[0-9]{4}-[0-9]{2}-[0-9]{2}(_([0-9]+))?/\2/' | sort -n | tail -n 1)"

            if [[ $REV -ge 1 ]]; then
              BRANCH_NAME="${BRANCH_NAME}_$((REV + 1))"
            else
              BRANCH_NAME="${BRANCH_NAME}_1"
            fi
          fi
          echo "BRANCH_NAME=${BRANCH_NAME}" >> "$GITHUB_OUTPUT"

      - name: Create and push release branch
        env:
          BRANCH_NAME: ${{ steps.generate-branch-name.outputs.BRANCH_NAME }}
        run: |
          git branch ${BRANCH_NAME}
          git tag -f "current-release"
          git push origin ${BRANCH_NAME}
          git push origin -f "current-release"

      - name: Build Changelog
        id: build-changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fromTag: ${{ steps.get-latest-release-tag.outputs.LATEST_RELEASE_TAG }}
          mode: COMMIT
          toTag: latest-release
          configurationJson: |
            {
              "template": "#{{CONTRIBUTORS}}\n\n#{{CHANGELOG}}",
              "categories": [
                {
                  "title": "## üöÄ Features",
                  "labels": ["feature"]
                },
                {
                  "title": "## üêõ Fixes",
                  "labels": ["fix"]
                },
                {
                  "title": "## üì¶ Uncategorized",
                  "labels": []
                }
              ]
            }

      - name: Open PR
        env:
          BRANCH_NAME: ${{ steps.generate-branch-name.outputs.BRANCH_NAME }}
          CHANGELOG: ${{ steps.build-changelog.outputs.CHANGELOG }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create -B main -H ${BRANCH_NAME} --title "release: $(date +'%Y-%m-%d')" --body "${CHANGELOG}"
