name: Build and deploy main

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      message:
        required: true

concurrency:
  group: ${{ github.workflow }}

jobs:
  manual_deployment:
    name: Manual deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Commit manual deployment
        if: ${{ github.event.inputs.message }}
        id: manual-commit
        run: |
          git config --local user.email "josh@forisha.com"
          git config --local user.name "Josh Forisha"
          git commit --allow-empty -m "${{ github.event.inputs.message }}"
          git push

  tag_and_update_version:
    needs: [manual_deployment]
    name: Tag and update version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get today's date
        id: get-today
        run: echo "TODAY=$(date '+%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Escape date for tag lookup
        id: escape-date
        env:
          TODAY: ${{ steps.get-today.outputs.TODAY }}
        run: echo "ESCAPED_DATE=$(echo $TODAY | sed -E 's/\./\\./g')" >> $GITHUB_OUTPUT

      - name: Get latest tag
        id: get-latest-tag
        env:
          ESCAPED_DATE: ${{ steps.escape-date.outputs.ESCAPED_DATE }}
          TODAY_TAGS: ${{ steps.get-today.outputs.TODAY }}
        run: echo "LATEST_TAG=$(git tag | grep "$ESCAPED_DATE" | sort -V | tail -n 1)" >> $GITHUB_OUTPUT

      - name: Generate release tag name
        id: generate-tag-name
        env:
          TODAY: ${{ steps.get-today.outputs.TODAY }}
          LATEST_TAG: ${{ steps.get-latest-tag.outputs.LATEST_TAG }}
        run: |
          TAG_NAME="$TODAY"
          if [[ -n $LATEST_TAG ]]; then
            REV="$(echo $LATEST_TAG | sed -E 's/[0-9]{4}\.[0-9]{2}\.[0-9]{2}(\.([0-9]+))?/\2/')"
            if [[ $REV -ge 1 ]]; then
              TAG_NAME="$TODAY.$((REV + 1))"
            else
              TAG_NAME="$TODAY.1"
            fi
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create and push release tag
        env:
          TAG_NAME: ${{ steps.generate-tag-name.outputs.TAG_NAME }}
        run: |
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
